#####################################################################
# Programing util
#####################################################################
[[plugins]]
repo = 'thinca/vim-quickrun'
depends = ['vimproc.vim']
on_cmd = 'QuickRun'
hook_add = '''
    " Running vimproc
    " Showing success is buffer and error is quickfix
    let g:quickrun_config = {
        \ '_' : {
            \ 'runner' : 'vimproc',
            \ 'runner/vimproc/updatetime' : 40,
            \ 'outputter' : 'error',
            \ 'outputter/error/success' : 'buffer',
            \ 'outputter/error/error'   : 'quickfix',
            \ 'outputter/buffer/split' : ':botright 8sp',
        \ }
    \}

    " for Python
    let g:quickrun_config.python = {
        \ 'command': '~/.pyenv/shims/python',
        \ 'cmdopt': '-u'
        \ }

    " for C++
    let g:quickrun_config.cpp = {
        \ 'command': 'g++',
        \ 'input': 'input',
        \ 'runner': 'system'
        \ }

    " Close quickfix is [q]

    augroup MyQuickFixClose
        au FileType qf nnoremap <silent><buffer>q :quit<CR>
    augroup END

    " Keymap
    let g:quickrun_no_default_key_mappings = 1
    " Running with close quickfix and save file
    nnoremap <Leader>r :<C-U>QuickRun
    xnoremap <Leader>r gv:<C-U>QuickRun

    " Stop quickrun is [C-c]
    nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

#####################################################################
# Go
#####################################################################
[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = ['go']

#####################################################################
# Rust
#####################################################################
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_source = '''
    let g:rustfmt_autosave = 1
'''

#####################################################################
# Python
#####################################################################
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']
hook_source = '''
    " Disable auto init
    let g:jedi#auto_initialization = 1
    let g:jedi#auto_vim_configuration = 0

    " Disable auto complesions
    let g:jedi#completions_enabled = 0
    let g:jedi#popup_on_dot = 0
    let g:jedi#smart_auto_mappings = 0
    let g:jedi#show_call_signatures = 0

    " Custom keymap
    let g:jedi#goto_command = "<C-]>"
    let g:jedi#goto_assignments_command = "<Localleader>g"
    let g:jedi#goto_definitions_command = ""
    let g:jedi#documentation_command = "K"
    let g:jedi#usages_command = "<Localleader>n"
    let g:jedi#rename_command = "<Localleader>R"
'''

#####################################################################
# Web
#####################################################################
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'djangohtml']

[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['html', 'xhtml', 'javascript', 'typescript', 'javascript.jsx', 'typescript.tsx']
hook_add = '''
  let g:closetag_filenames='*.html'
  let g:closetag_xhtml_filenames='*.jsx,*.tsx,*.vue'
  let g:closetag_filetypes='html'
  let g:closetag_xhtml_filetypes='jsx,tsx,javascript.jsx,typescript.tsx,vue'
  let g:closetag_emptyTags_caseSensitive=1
  let g:closetag_shortcut='>'
'''

#####################################################################
# Markdown
#####################################################################
[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown','plantuml']
hook_add = '''
    let g:mkdp_command_for_global = 1
'''
build = 'sh -c "cd app && yarn install"'

[[plugins]]
repo = 'mattn/vim-maketable'
on_ft = ['markdown']

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown']
hook_add = '''
    let g:table_mode_corner = '|'
    let g:table_mode_always_active = 1
    let g:table_mode_syntax = 1
    let g:table_mode_auto_align = 1
'''

#####################################################################
# Other Util
#####################################################################

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_source = '''
    let g:vim_json_syntax_conceal = 0
    let g:indentLine_noConcealCursor = ""
'''

[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = ['plantuml']

[[plugins]]
repo = 'mattn/vim-sqlfmt'
on_ft = ['sql']
hook_add = '''
    let g:sqlfmt_program = "sqlformat --comma_first true -r -k lower -s -o %s -"
'''

