# Tig default configuration
# https://github.com/jonas/tig/blob/master/tigrc

# main viewの左端にコミットIDを表示する
set main-view = id date:local=yes author:email-user commit-title:graph=yes,refs=yes
# Pager系の行数表示をON、intervalを1に (default: line-number:no,interval=5)
set pager-view  = line-number:yes,interval=1 text
set stage-view  = line-number:yes,interval=1 text
set log-view    = line-number:yes,interval=1 text
set blob-view   = line-number:yes,interval=1 text
set diff-view   = line-number:yes,interval=1 text:yes,commit-title-overflow=no

# diff-highlight を有効化
set diff-highlight = true

## Key bindings

# reflogをpagerで表示
# reflog
bind generic L !sh -c "git reflog --pretty=raw | tig --pretty=raw"

# _ で指定 reflog 番号にリセット
bind generic _ ?git reset --hard HEAD@{"%(prompt Enter HEAD@{} number: )"}

# commitハッシュをコピー
bind main c ?sh -c "echo %(commit) | pbcopy"

# ammend
bind status + !git commit --amend

# push
bind status P ?git push -u %(remote) %(repo:head)

# delete
bind status D ?git clean -f %(file)

# rebase
bind main <Ctrl-r> ?git rebase -i %(commit)
bind refs R ?git rebase %(branch)
bind status <Ctrl-r> ?git rebase --continue

# . で HEAD との diff
bind main . !sh -c "git diff --patch-with-stat %(commit) | tig"
bind diff . !sh -c "git diff --patch-with-stat %(commit) | tig"
bind refs . !sh -c "git diff --patch-with-stat %(branch) | tig"

# Alt-. で指定 commit ID との diff
bind main <Esc>. ?sh -c "git diff --patch-with-stat %(commit)..%(prompt Enter commit ID: ) | tig"
bind diff <Esc>. ?sh -c "git diff --patch-with-stat %(commit)..%(prompt Enter commit ID: ) | tig"
bind refs <Esc>. ?sh -c "git diff --patch-with-stat %(branch)..%(prompt Enter branch name: ) | tig"

# stash
bind generic S ?git stash save "%(prompt Enter stash comment: )"
bind stash D ?git stash drop %(stash)

# revert
bind main ! ?git revert %(commit)

# g をファイル先頭に移動に変更、 view-grep を再割当て
bind generic g move-first-line
bind generic E view-grep

# G でファイル末尾に移動
bind generic G move-last-line
bind main    G move-last-line

